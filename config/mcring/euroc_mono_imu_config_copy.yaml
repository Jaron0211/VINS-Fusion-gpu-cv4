%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/openrtk/topic_rtk_imu_ros"
image0_topic: "/camera/image_raw"
output_path: "/home/jaron/output"

cam0_calib: "basler.yaml"

image_width: 1280
image_height: 1024


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.00524946,  0.01097510, -0.99992599, -0.02755259, -0.99995891, -0.00733325, -0.00533012, -0.09587724, -0.00739121,  0.99991288,  0.01093615,  0.01190761, 0,0,0,1]

#Multiple thread support
multiple_thread: 1

use_gpu: 1

#feature traker paprameters
max_cnt: 300            # max feature number in feature tracking
min_dist: 15            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 0.4        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.05  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 15.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.0356856538965           # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.00441586769079          # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.000238206652368         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 1.48887891385e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude


#unsynchronization parameters
estimate_td: 0.0                      # online estimate time offset between camera and imu
td: 0.008 #0.376                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
